# -*- coding: utf-8 -*-
"""Tic-Tac-Toe 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZdxbFBZBksujCH_b-3n3WQLgk24aaAEC
"""

class TicTacToe:
    def __init__(self):
        self.board = [['-' for _ in range(3)] for _ in range(3)]
        self.current_player = 'X'

    def print_board(self):
        print(" 1 | 2 | 3 ")
        print("---|---|---")
        print(" 4 | 5 | 6 ")
        print("---|---|---")
        print(" 7 | 8 | 9 ")
        for i in range(3):
            for j in range(3):
                print(self.board[i][j], end=' ')
            print()

    def check_winner(self):
        for i in range(3):
            if self.board[i][0] == self.board[i][1] == self.board[i][2] != '-':
                return self.board[i][0]

            if self.board[0][i] == self.board[1][i] == self.board[2][i] != '-':
                return self.board[0][i]

        if self.board[0][0] == self.board[1][1] == self.board[2][2] != '-':
            return self.board[0][0]

        if self.board[0][2] == self.board[1][1] == self.board[2][0] != '-':
            return self.board[0][2]

        return None

    def make_move(self, row, col):
        if self.board[row][col] == '-':
            self.board[row][col] = self.current_player
            return True
        return False

    def is_board_full(self):
        for i in range(3):
            for j in range(3):
                if self.board[i][j] == '-':
                    return False
        return True

    def switch_player(self):
        if self.current_player == 'X':
            self.current_player = 'O'
        else:
            self.current_player = 'X'

    def play(self):
        while True:
            self.print_board()
            move = input(f'Player {self.current_player}, enter your move (1-9): ')
            try:
                move = int(move) - 1
                if 0 <= move <= 8:
                    if self.make_move(move // 3, move % 3):
                        winner = self.check_winner()
                        if winner:
                            self.print_board()
                            print(f'Player {winner} wins!')
                            break
                        if self.is_board_full():
                            self.print_board()
                            print('The game is tied!')
                            break
                        self.switch_player()
                    else:
                        print('Cell is already occupied. Try again.')
                else:
                    print('Invalid input. Enter a number between 1 and 9.')
            except ValueError:
                print('Invalid input. Enter a number between 1 and 9.')

if __name__ == '__main__':
    game = TicTacToe()
    game.play()