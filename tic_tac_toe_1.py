# -*- coding: utf-8 -*-
"""Tic-Tac-Toe 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZdxbFBZBksujCH_b-3n3WQLgk24aaAEC
"""

import random

def display_board(board):
    # Implement a user-friendly display of the board with numbered cells.
    print(" " + board[0] + " | " + board[1] + " | " + board[2] + " ")
    print("---|---|---")
    print(" " + board[3] + " | " + board[4] + " | " + board[5] + " ")
    print("---|---|---")
    print(" " + board[6] + " | " + board[7] + " | " + board[8] + " ")

def enter_move(board):
    while True:
        try:
            move = int(input("Enter your move (1-9): "))
            if 1 <= move <= 9:
                index = move - 1
                if board[index] == " ":
                    board[index] = "O"
                    return
                else:
                    print("Cell is already occupied. Try again.")
            else:
                print("Invalid input. Enter a number between 1 and 9.")
        except ValueError:
            print("Invalid input. Enter a number between 1 and 9.")

def draw_move(board):
    free_cells = [i for i in range(9) if board[i] == " "]
    if free_cells:
        index = random.choice(free_cells)
        board[index] = "X"

def check_winner(board, player):
    # Check rows, columns, and diagonals for a win.
    for i in range(3):
        if all(board[i*3 + j] == player for j in range(3)) or all(board[i + j*3] == player for j in range(3)):
            return True
    if all(board[i*4] == player for i in range(3)) or all(board[2 + i*2] == player for i in range(3)):
        return True
    return False

def main():
    board = [" " for _ in range(9)]
    display_board(board)

    for turn in range(9):
        if turn % 2 == 0:
            enter_move(board)
        else:
            draw_move(board)

        display_board(board)

        if turn >= 4:
            if check_winner(board, "O"):
                print("You won!")
                return
            elif check_winner(board, "X"):
                print("Computer won!")
                return

    print("It's a tie!")

if __name__ == "__main__":
    main()